{"version":3,"sources":["firebase.js","App.js","reportWebVitals.js","index.js"],"names":["app","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","App","React","useState","openWebchat","setOpenWebchat","text","setText","chatList","setChatList","localStorage","getItem","chatId","setChatId","console","log","useEffect","database","ref","on","snapshot","data","val","mapping","Object","keys","map","sort","x","y","timestamp","setSender","payload","message","Date","getTime","type","concat","pushDb","push","set","intro","then","setItem","key","className","onClick","length","placeholder","value","onChange","e","target","onKeyDown","event","xmlns","width","height","fill","viewBox","d","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a9e486ae.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\nimport firebase from \"firebase/compat/app\";\nimport \"firebase/compat/database\";\n\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBuie2rXE0KGDX6CErrNsvqiaQU8s8m0_s\",\n  authDomain: \"react-webchat-d1f05.firebaseapp.com\",\n  projectId: \"react-webchat-d1f05\",\n  storageBucket: \"react-webchat-d1f05.appspot.com\",\n  messagingSenderId: \"402798180842\",\n  appId: \"1:402798180842:web:b3b0713dece228651bda93\",\n  measurementId: \"G-H03LY5R678\",\n};\n\n// Initialize Firebase\nexport const app = firebase.initializeApp(firebaseConfig);\n","import React from \"react\";\nimport { app } from \"./firebase\";\nimport \"./App.css\";\n\nfunction App() {\n  const [openWebchat, setOpenWebchat] = React.useState(false);\n  const [text, setText] = React.useState(\"\");\n  const [chatList, setChatList] = React.useState([]);\n  const [chatId, setChatId] = React.useState(\n    localStorage.getItem(\"chatId\") || null\n  );\n\n  console.log(chatList);\n\n  React.useEffect(() => {\n    if (chatId) {\n      app\n        .database()\n        .ref(`/messages/${chatId}`)\n        .on(\"value\", (snapshot) => {\n          const data = snapshot.val();\n          if (data !== null) {\n            const mapping = Object.keys(data).map((keys) => ({\n              ...data[keys],\n            }));\n            mapping.sort((x, y) => x.timestamp - y.timestamp);\n            setChatList(mapping);\n          }\n        });\n    }\n  }, [chatId]);\n\n  const setSender = (val) => {\n    if (val || val !== \"\") {\n      const payload = {\n        message: val,\n        timestamp: new Date().getTime(),\n        type: \"sender\",\n      };\n\n      setText(\"\");\n      setChatList(chatList.concat(payload));\n      pushDb(payload);\n    }\n  };\n\n  const pushDb = (val) => {\n    if (!chatId) {\n      const ref = app.database().ref(`/messages`).push();\n      ref.set({ intro: val }).then(() => {\n        localStorage.setItem(\"chatId\", ref.key);\n        setChatId(ref.key);\n      });\n    } else {\n      const ref = app.database().ref(`/messages/${chatId}`).push();\n      ref.set(val);\n    }\n  };\n\n  return (\n    <div className=\"webchat-app\">\n      {/*  Chat Layout */}\n      {openWebchat && (\n        <div className=\"card webchat-card\">\n          {/* Chat header */}\n          <div className=\"webchat-head\">\n            <div className=\"webchat-head-text\">\n              <h5 className=\"card-title webchat-title\">Hubungi Kami</h5>\n              <p className=\"card-title webchat-sub-title\">\n                Halo bro kalo kamu ada kesusahan boleh tanya langsung ke kami.\n              </p>\n            </div>\n            <span\n              className=\"close-toggle\"\n              onClick={() => setOpenWebchat(false)}\n            >\n              x\n            </span>\n          </div>\n          {/* Chat body */}\n          <div className=\"webchat-body\">\n            <div className=\"webchat-body-text\">\n              {/* introduction */}\n              {chatList?.length === 0 && (\n                <>\n                  <p className=\"text-center\">How may we assist you?</p>\n                  {[\n                    \"I have a pricing question\",\n                    \"I have a question about Enterprise\",\n                    \"I have a question about Subscription\"\n                  ].map((val, key) => (\n                    <div\n                      className=\"d-flex justify-content-center m-1\"\n                      key={key}\n                    >\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-primary\"\n                        onClick={() => setSender(val)}\n                      >\n                        {val}\n                      </button>\n                    </div>\n                  ))}\n                </>\n              )}\n\n              {/* already interaction */}\n              {chatList?.length >= 1 &&\n                chatList?.map((val, key) => (\n                  <div\n                    className={\n                      (val?.type === \"sender\"\n                        ? \"justify-content-end\"\n                        : \"justify-content-start\") + \" d-flex m-1\"\n                    }\n                    key={key}\n                  >\n                    <button\n                      type=\"button\"\n                      className={\n                        (val?.type === \"sender\" ? \"btn-primary\" : \"btn-light\") +\n                        \" btn\"\n                      }\n                    >\n                      {val?.message}\n                    </button>\n                  </div>\n                ))}\n            </div>\n            <input\n              className=\"webchat-input\"\n              placeholder=\"Ask a question...\"\n              value={text}\n              onChange={(e) => setText(e.target.value)}\n              onKeyDown={(event) => {\n                if (event.key === \"Enter\") {\n                  setSender(text);\n                }\n              }}\n            />\n          </div>\n        </div>\n      )}\n\n      {/* Button Toggle */}\n      {!openWebchat && (\n        <button\n          type=\"button\"\n          className=\"btn btn-primary btn-togle\"\n          onClick={() => setOpenWebchat(true)}\n        >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"16\"\n            height=\"16\"\n            fill=\"currentColor\"\n            className=\"bi bi-chat-dots\"\n            viewBox=\"0 0 16 16\"\n          >\n            <path d=\"M5 8a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm4 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm3 1a1 1 0 1 0 0-2 1 1 0 0 0 0 2z\" />\n            <path d=\"m2.165 15.803.02-.004c1.83-.363 2.948-.842 3.468-1.105A9.06 9.06 0 0 0 8 15c4.418 0 8-3.134 8-7s-3.582-7-8-7-8 3.134-8 7c0 1.76.743 3.37 1.97 4.6a10.437 10.437 0 0 1-.524 2.318l-.003.011a10.722 10.722 0 0 1-.244.637c-.079.186.074.394.273.362a21.673 21.673 0 0 0 .693-.125zm.8-3.108a1 1 0 0 0-.287-.801C1.618 10.83 1 9.468 1 8c0-3.192 3.004-6 7-6s7 2.808 7 6c0 3.193-3.004 6-7 6a8.06 8.06 0 0 1-2.088-.272 1 1 0 0 0-.711.074c-.387.196-1.24.57-2.634.893a10.97 10.97 0 0 0 .398-2z\" />\n          </svg>\n        </button>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"webchat-here\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}